import{a as k}from"./chunk-GDLT6B7L.js";import{a as t}from"./chunk-HWXDEZM2.js";import"./chunk-DTZHD5YF.js";import{T as m,a as e}from"./chunk-DVY63WM5.js";import{Aa as c,Ea as r,Va as d,rb as p}from"./chunk-G4HPNW6O.js";import{a as l,b as i,h as y}from"./chunk-TWZW5B45.js";var h=y(m());var D={title:"Ciclo de Vida de um Componente",mdFile:"./index.md",category:k,order:5},s=D;var B=[];var E={},g=E;var u=`<p class="ngde">No Angular, o ciclo de vida de um componente \xE9 uma s\xE9rie de eventos que ocorrem desde a cria\xE7\xE3o at\xE9 a destrui\xE7\xE3o de um componente. Esses eventos permitem que os desenvolvedores executem l\xF3gicas espec\xEDficas em momentos cruciais do ciclo de vida do componente. No Angular 15, tr\xEAs dos principais eventos do ciclo de vida s\xE3o: <code class="ngde">OnInit</code>, <code class="ngde">OnAfterViewInit</code> e <code class="ngde">OnDestroy</code>. Vamos explorar cada um deles com exemplos pr\xE1ticos.</p><hr class="ngde"><h3 id="1-oninit" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">1. <strong class="ngde">OnInit</strong><ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="1-oninit"></ng-doc-heading-anchor></h3><p class="ngde">O evento <code class="ngde">OnInit</code> \xE9 disparado quando o componente \xE9 inicializado. Ele \xE9 chamado uma vez, logo ap\xF3s o Angular terminar de configurar o componente e suas propriedades de entrada (<code class="ngde">@Input</code>). Esse \xE9 o momento ideal para realizar inicializa\xE7\xF5es, como carregar dados de uma API ou configurar valores iniciais.</p><h4 id="exemplo" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">Exemplo:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="exemplo"></ng-doc-heading-anchor></h4><p class="ngde">Suponha que temos um componente <code class="ngde">UserProfileComponent</code> que exibe informa\xE7\xF5es de um usu\xE1rio. Essas informa\xE7\xF5es s\xE3o carregadas de uma API quando o componente \xE9 inicializado.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> OnInit } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> '@angular/core'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { UserService } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> './user.service'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">@</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  selector</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'app-user-profile'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  template</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> \`&#x3C;div>{{ user.name }}&#x3C;/div>\`</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">})</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">export</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> UserProfileComponent</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> implements</span><span style="color:#6F42C1;--shiki-dark:#39BAE6" class="ngde"> OnInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">  user</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> any</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">  constructor</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">private</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde"> userService</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> UserService</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">  ngOnInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> void</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">userService</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">getUser</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">subscribe</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde">data</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> =></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">      this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">user </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> data</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    })</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">Neste exemplo, o m\xE9todo <code class="ngde">ngOnInit</code> \xE9 usado para carregar os dados do usu\xE1rio assim que o componente \xE9 inicializado. Isso garante que a l\xF3gica de carregamento seja executada no momento certo.</p><hr class="ngde"><h3 id="2-onafterviewinit" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">2. <strong class="ngde">OnAfterViewInit</strong><ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="2-onafterviewinit"></ng-doc-heading-anchor></h3><p class="ngde">O evento <code class="ngde">OnAfterViewInit</code> \xE9 disparado ap\xF3s o Angular inicializar a view do componente e suas views filhas. Esse \xE9 o momento ideal para interagir com o DOM ou realizar opera\xE7\xF5es que dependem da renderiza\xE7\xE3o completa do template.</p><h4 id="exemplo-1" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">Exemplo:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="exemplo-1"></ng-doc-heading-anchor></h4><p class="ngde">Imagine um componente <code class="ngde">ChartComponent</code> que renderiza um gr\xE1fico usando uma biblioteca de terceiros que precisa acessar um elemento do DOM.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> AfterViewInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> ViewChild</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> ElementRef } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> '@angular/core'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> *</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> as</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> Chart </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'chart.js'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">@</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  selector</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'app-chart'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  template</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> \`&#x3C;canvas #chartCanvas>&#x3C;/canvas>\`</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">})</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">export</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> ChartComponent</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> implements</span><span style="color:#6F42C1;--shiki-dark:#39BAE6" class="ngde"> AfterViewInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">  @</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">ViewChild</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">'chartCanvas'</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) </span><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">chartCanvas</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">!:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> ElementRef</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">  ngAfterViewInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> void</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    const</span><span style="color:#005CC5;--shiki-dark:#BFBDB6" class="ngde"> ctx</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde"> this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">chartCanvas</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">nativeElement</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">getContext</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">'2d'</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">    new</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> Chart</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(ctx</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      type</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'bar'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      data</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        labels</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> [</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">'Red'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'Blue'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'Yellow'</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">]</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        datasets</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> [{</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">          label</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'Votes'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">          data</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> [</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde">12</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> 19</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> 3</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">]</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">          backgroundColor</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> [</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">'red'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'blue'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'yellow'</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        }]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    })</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">Aqui, o m\xE9todo <code class="ngde">ngAfterViewInit</code> \xE9 usado para garantir que o gr\xE1fico seja renderizado apenas ap\xF3s o elemento <code class="ngde">&#x3C;canvas></code> estar dispon\xEDvel no DOM.</p><hr class="ngde"><h3 id="3-ondestroy" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">3. <strong class="ngde">OnDestroy</strong><ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="3-ondestroy"></ng-doc-heading-anchor></h3><p class="ngde">O evento <code class="ngde">OnDestroy</code> \xE9 disparado quando o componente \xE9 destru\xEDdo, ou seja, quando ele \xE9 removido do DOM. Esse \xE9 o momento ideal para realizar limpezas, como cancelar subscri\xE7\xF5es de observables ou liberar recursos para evitar memory leaks.</p><h4 id="exemplo-2" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">Exemplo:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="exemplo-2"></ng-doc-heading-anchor></h4><p class="ngde">Suponha que temos um componente <code class="ngde">NotificationComponent</code> que se inscreve em um servi\xE7o de notifica\xE7\xF5es para exibir alertas em tempo real. Quando o componente \xE9 destru\xEDdo, precisamos cancelar a subscri\xE7\xE3o para evitar vazamentos de mem\xF3ria.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> OnInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> OnDestroy } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> '@angular/core'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { NotificationService } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> './notification.service'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { Subscription } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'rxjs'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">@</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  selector</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'app-notification'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  template</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> \`&#x3C;div>{{ message }}&#x3C;/div>\`</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">})</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">export</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> NotificationComponent</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> implements</span><span style="color:#6F42C1;--shiki-dark:#39BAE6" class="ngde"> OnInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#6F42C1;--shiki-dark:#39BAE6" class="ngde"> OnDestroy</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">  message</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> string</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> ''</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">  private</span><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde"> subscription</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">!:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> Subscription</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">  constructor</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">private</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde"> notificationService</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> NotificationService</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">  ngOnInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> void</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">subscription </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde"> this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">notificationService</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">getNotifications</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">subscribe</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde">message</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> =></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">      this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">message </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> message</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    })</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">  ngOnDestroy</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> void</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">subscription</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">unsubscribe</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">Neste exemplo, o m\xE9todo <code class="ngde">ngOnDestroy</code> \xE9 usado para cancelar a subscri\xE7\xE3o do observable, garantindo que nenhuma l\xF3gica desnecess\xE1ria continue sendo executada ap\xF3s o componente ser destru\xEDdo.</p><hr class="ngde"><h3 id="situa\xE7\xE3o-pr\xE1tica-resolvendo-um-problema-com-ngafterviewinit" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">Situa\xE7\xE3o Pr\xE1tica: Resolvendo um Problema com <code class="ngde">ngAfterViewInit</code><ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="situa\xE7\xE3o-pr\xE1tica-resolvendo-um-problema-com-ngafterviewinit"></ng-doc-heading-anchor></h3><h4 id="problema" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">Problema:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="problema"></ng-doc-heading-anchor></h4><p class="ngde">Imagine um componente <code class="ngde">ModalComponent</code> que exibe um modal na tela. O modal precisa ser focado automaticamente quando \xE9 aberto para garantir a acessibilidade. No entanto, o foco s\xF3 pode ser aplicado ap\xF3s o modal ser renderizado no DOM.</p><h4 id="solu\xE7\xE3o" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">Solu\xE7\xE3o:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="solu\xE7\xE3o"></ng-doc-heading-anchor></h4><p class="ngde">Podemos usar o <code class="ngde">ngAfterViewInit</code> para garantir que o foco seja aplicado apenas ap\xF3s o modal estar completamente renderizado.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> AfterViewInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> ViewChild</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> ElementRef } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> '@angular/core'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">@</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  selector</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'app-modal'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  template</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> \`</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">    &#x3C;div #modal class="modal"></span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">      &#x3C;div class="modal-content"></span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">        &#x3C;p>Este \xE9 um modal!&#x3C;/p></span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">      &#x3C;/div></span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">    &#x3C;/div></span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">  \`</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">})</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">export</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> ModalComponent</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> implements</span><span style="color:#6F42C1;--shiki-dark:#39BAE6" class="ngde"> AfterViewInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">  @</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">ViewChild</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">'modal'</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) </span><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">modal</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">!:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> ElementRef</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">  ngAfterViewInit</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> void</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">modal</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">nativeElement</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">focus</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">Neste caso, o m\xE9todo <code class="ngde">ngAfterViewInit</code> resolve o problema de acessibilidade, garantindo que o modal receba o foco no momento certo.</p><h3 id="diagrama" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">Diagrama<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="diagrama"></ng-doc-heading-anchor></h3><pre class="mermaid ngde">sequenceDiagram
participant Angular as Angular Framework
participant Component as Componente Angular
participant DOM as DOM (Document Object Model)

Angular->>Component: Cria o componente
Component->>Component: ngOnInit()
Note over Component: Inicializa dados, carrega informa\xE7\xF5es, etc.

Angular->>DOM: Renderiza a view do componente
DOM-->>Component: View pronta
Component->>Component: ngAfterViewInit()
Note over Component: Interage com o DOM, renderiza gr\xE1ficos, etc.

Angular->>Component: Destr\xF3i o componente
Component->>Component: ngOnDestroy()
Note over Component: Limpa recursos, cancela subscri\xE7\xF5es, etc.</pre><h3 id="conclus\xE3o" href="conceitos-fundamentais/ciclo-de-vida-de-um-componente" headinglink="true" class="ngde">Conclus\xE3o<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="conclus\xE3o"></ng-doc-heading-anchor></h3><p class="ngde">Os eventos do ciclo de vida de um componente no Angular 15, como <code class="ngde">OnInit</code>, <code class="ngde">OnAfterViewInit</code> e <code class="ngde">OnDestroy</code>, s\xE3o ferramentas poderosas para gerenciar a l\xF3gica de um componente de forma eficiente. Cada evento tem um prop\xF3sito espec\xEDfico e, quando usado corretamente, pode resolver problemas comuns, como carregamento de dados, intera\xE7\xE3o com o DOM e gerenciamento de recursos. Entender e aplicar esses eventos \xE9 essencial para desenvolver componentes robustos e de alta performance.</p>`,o=class a extends e{pageType="guide";pageContent=u;page=s;demoAssets=g;constructor(){super()}static \u0275fac=function(n){return new(n||a)};static \u0275cmp=c({type:a,selectors:[["ng-doc-page-88zwv3pp"]],features:[p([{provide:e,useExisting:a},B,s.providers??[]]),r],decls:1,vars:0,template:function(n,A){n&1&&d(0,"ng-doc-page")},dependencies:[t],encapsulation:2,changeDetection:0})},C=[i(l({},(0,h.isRoute)(s.route)?s.route:{}),{path:"",component:o,title:"Ciclo de Vida de um Componente"})],M=C;export{o as PageComponent,M as default};
