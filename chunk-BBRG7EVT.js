import{a as t,b as g}from"./chunk-2LQEWXMD.js";import"./chunk-DTZHD5YF.js";import{T as u,a as e}from"./chunk-DVY63WM5.js";import{Aa as d,Ea as c,Va as r,rb as p}from"./chunk-G4HPNW6O.js";import{a as i,b as l,h as m}from"./chunk-TWZW5B45.js";var B=m(u());var F={title:"DataBind",mdFile:"./index.md",category:g,order:5},s=F;var k=[];var b={},h=b;var D=`<p class="ngde">O Angular oferece v\xE1rias formas de data binding para conectar o template (HTML) com o componente (TypeScript). O data binding \xE9 uma das funcionalidades mais poderosas do Angular, permitindo que voc\xEA crie aplica\xE7\xF5es din\xE2micas e interativas. Neste manual, vamos explorar os principais tipos de data binding: <strong class="ngde">Interpola\xE7\xE3o</strong>, <strong class="ngde">Property Binding</strong>, e <strong class="ngde">Event Binding</strong>.</p><h2 id="1-interpola\xE7\xE3o" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">1. Interpola\xE7\xE3o<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="1-interpola\xE7\xE3o"></ng-doc-heading-anchor></h2><p class="ngde">A interpola\xE7\xE3o \xE9 a forma mais simples de data binding no Angular. Ela permite que voc\xEA exiba valores de propriedades do componente diretamente no template.</p><h3 id="sintaxe" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Sintaxe:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="sintaxe"></ng-doc-heading-anchor></h3><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">{{ express\xE3o }}</span></span></code></pre><h3 id="exemplo" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Exemplo:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="exemplo"></ng-doc-heading-anchor></h3><p class="ngde">Suponha que voc\xEA tenha uma propriedade <code class="ngde">title</code> no seu componente:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// app.component.ts</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { Component } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> '@angular/core'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">@</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  selector</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'app-root'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  templateUrl</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> './app.component.html'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  styleUrls</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> [</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">'./app.component.css'</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">})</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">export</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> AppComponent</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">  title</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'Bem-vindo ao Angular 15!'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">No template, voc\xEA pode exibir o valor de <code class="ngde">title</code> usando interpola\xE7\xE3o:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">&#x3C;!-- app.component.html --></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">h1</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">{{ title }}</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">h1</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span></code></pre><h3 id="resultado" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Resultado:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="resultado"></ng-doc-heading-anchor></h3><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">h1</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">Bem-vindo ao Angular 15!</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">h1</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span></code></pre><h2 id="2-property-binding" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">2. Property Binding<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="2-property-binding"></ng-doc-heading-anchor></h2><p class="ngde">O property binding permite que voc\xEA associe propriedades de elementos HTML a propriedades do componente. Isso \xE9 \xFAtil quando voc\xEA deseja definir dinamicamente atributos de elementos HTML, como <code class="ngde">src</code>, <code class="ngde">disabled</code>, <code class="ngde">class</code>, etc.</p><h3 id="sintaxe-1" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Sintaxe:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="sintaxe-1"></ng-doc-heading-anchor></h3><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">[property]="express\xE3o"</span></span></code></pre><h3 id="exemplo-1" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Exemplo:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="exemplo-1"></ng-doc-heading-anchor></h3><p class="ngde">Suponha que voc\xEA tenha uma propriedade <code class="ngde">imageUrl</code> no seu componente:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// app.component.ts</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">export</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> AppComponent</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">  imageUrl</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'https://angular.io/assets/images/logos/angular/angular.png'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">No template, voc\xEA pode usar property binding para definir o atributo <code class="ngde">src</code> de uma imagem:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">&#x3C;!-- app.component.html --></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">img</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> [src]</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"imageUrl"</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> alt</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"Angular Logo"</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span></code></pre><h3 id="resultado-1" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Resultado:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="resultado-1"></ng-doc-heading-anchor></h3><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">img</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> src</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"https://angular.io/assets/images/logos/angular/angular.png"</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> alt</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"Angular Logo"</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span></code></pre><h2 id="3-event-binding" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">3. Event Binding<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="3-event-binding"></ng-doc-heading-anchor></h2><p class="ngde">O event binding permite que voc\xEA responda a eventos do DOM, como cliques, teclas pressionadas, movimentos do mouse, etc. Voc\xEA pode associar m\xE9todos do componente a esses eventos.</p><h3 id="sintaxe-2" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Sintaxe:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="sintaxe-2"></ng-doc-heading-anchor></h3><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(event)="m\xE9todo()"</span></span></code></pre><h3 id="exemplo-2" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Exemplo:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="exemplo-2"></ng-doc-heading-anchor></h3><p class="ngde">Suponha que voc\xEA tenha um m\xE9todo <code class="ngde">onClick()</code> no seu componente:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// app.component.ts</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">export</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> AppComponent</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">  onClick</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">() {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">    alert</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">'Bot\xE3o clicado!'</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">No template, voc\xEA pode usar event binding para chamar o m\xE9todo <code class="ngde">onClick()</code> quando o bot\xE3o for clicado:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">&#x3C;!-- app.component.html --></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">button</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> (click)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"onClick()"</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">Clique aqui</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">button</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span></code></pre><h3 id="resultado-2" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Resultado:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="resultado-2"></ng-doc-heading-anchor></h3><p class="ngde">Quando o bot\xE3o for clicado, uma mensagem de alerta ser\xE1 exibida.</p><h2 id="4-two-way-data-binding" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">4. Two-Way Data Binding<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="4-two-way-data-binding"></ng-doc-heading-anchor></h2><p class="ngde">O two-way data binding combina property binding e event binding para permitir que voc\xEA sincronize automaticamente o valor de uma propriedade do componente com um elemento de entrada no template.</p><h3 id="sintaxe-3" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Sintaxe:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="sintaxe-3"></ng-doc-heading-anchor></h3><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">[(ngModel)]="propriedade"</span></span></code></pre><h3 id="exemplo-3" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Exemplo:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="exemplo-3"></ng-doc-heading-anchor></h3><p class="ngde">Para usar o two-way data binding, voc\xEA precisa importar o m\xF3dulo <code class="ngde">FormsModule</code> no seu m\xF3dulo principal:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// app.module.ts</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { NgModule } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> '@angular/core'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { BrowserModule } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> '@angular/platform-browser'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { FormsModule } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> '@angular/forms'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">import</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { AppComponent } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">from</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> './app.component'</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">@</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">NgModule</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">({</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  declarations</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> [</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">    AppComponent</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  ]</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  imports</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> [</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">    BrowserModule</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">    FormsModule</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  ]</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  providers</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> []</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  bootstrap</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> [</span><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">AppComponent</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">})</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">export</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> AppModule</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { }</span></span></code></pre><p class="ngde">Agora, suponha que voc\xEA tenha uma propriedade <code class="ngde">name</code> no seu componente:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// app.component.ts</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">export</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> AppComponent</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">  name</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> ''</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">No template, voc\xEA pode usar o two-way data binding para sincronizar o valor de <code class="ngde">name</code> com um campo de entrada:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">&#x3C;!-- app.component.html --></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">input</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> [(ngModel)]</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"name"</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> placeholder</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"Digite seu nome"</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">p</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">Ol\xE1, {{ name }}!</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">p</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span></code></pre><ng-doc-blockquote type="note" class="ngde"><p class="ngde">Apesar de abordamos o <em class="ngde">two-way data binding</em> para criar um formul\xE1rio, esta nao \xE9 a melhor forma de criar formul\xE1rios no Angular. Existe o conceito de Reactive Forms que ser\xE1 abordado em outro t\xF3pico, onde \xE9 a melhor forma de criar um formul\xE1rio no angular.</p></ng-doc-blockquote><h3 id="resultado-3" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Resultado:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="resultado-3"></ng-doc-heading-anchor></h3><p class="ngde">Quando voc\xEA digitar algo no campo de entrada, o valor da propriedade <code class="ngde">name</code> ser\xE1 atualizado automaticamente e o texto abaixo do campo ser\xE1 atualizado em tempo real.</p><h2 id="5-combinando-data-bindings" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">5. Combinando Data Bindings<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="5-combinando-data-bindings"></ng-doc-heading-anchor></h2><p class="ngde">Voc\xEA pode combinar diferentes tipos de data binding para criar interfaces de usu\xE1rio din\xE2micas e interativas.</p><h3 id="exemplo-4" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Exemplo:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="exemplo-4"></ng-doc-heading-anchor></h3><p class="ngde">Suponha que voc\xEA tenha um componente com uma propriedade <code class="ngde">isDisabled</code> e um m\xE9todo <code class="ngde">toggleDisabled()</code>:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// app.component.ts</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">export</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> AppComponent</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">  isDisabled</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> false</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">  toggleDisabled</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">() {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">isDisabled </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> !</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">isDisabled</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">No template, voc\xEA pode usar property binding para desabilitar um bot\xE3o com base no valor de <code class="ngde">isDisabled</code> e event binding para chamar o m\xE9todo <code class="ngde">toggleDisabled()</code> quando o bot\xE3o for clicado:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-html"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">&#x3C;!-- app.component.html --></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">button</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> [disabled]</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"isDisabled"</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> (click)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"toggleDisabled()"</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  {{ isDisabled ? 'Desabilitado' : 'Habilitado' }}</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">button</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span></code></pre><h3 id="resultado-4" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Resultado:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="resultado-4"></ng-doc-heading-anchor></h3><p class="ngde">O bot\xE3o ser\xE1 desabilitado ou habilitado com base no valor de <code class="ngde">isDisabled</code>, e o texto do bot\xE3o ser\xE1 atualizado dinamicamente.</p><h2 id="conclus\xE3o" href="conceitos-fundamentais/data-bind" headinglink="true" class="ngde">Conclus\xE3o<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="conclus\xE3o"></ng-doc-heading-anchor></h2><p class="ngde">O data binding \xE9 uma das funcionalidades mais poderosas do Angular, permitindo que voc\xEA crie aplica\xE7\xF5es din\xE2micas e interativas com facilidade. Com a interpola\xE7\xE3o, property binding, event binding e two-way data binding, voc\xEA pode conectar o template ao componente de forma eficiente e criar interfaces de usu\xE1rio ricas e responsivas.</p><p class="ngde">Este manual cobre os conceitos b\xE1sicos de data binding no Angular 15. \xC0 medida que voc\xEA avan\xE7a no desenvolvimento com Angular, voc\xEA encontrar\xE1 situa\xE7\xF5es mais complexas onde esses conceitos ser\xE3o combinados e expandidos para criar aplica\xE7\xF5es ainda mais poderosas.</p>`,o=class a extends e{pageType="guide";pageContent=D;page=s;demoAssets=h;constructor(){super()}static \u0275fac=function(n){return new(n||a)};static \u0275cmp=d({type:a,selectors:[["ng-doc-page-5i87vz89"]],features:[p([{provide:e,useExisting:a},k,s.providers??[]]),c],decls:1,vars:0,template:function(n,E){n&1&&r(0,"ng-doc-page")},dependencies:[t],encapsulation:2,changeDetection:0})},f=[l(i({},(0,B.isRoute)(s.route)?s.route:{}),{path:"",component:o,title:"DataBind"})],U=f;export{o as PageComponent,U as default};
